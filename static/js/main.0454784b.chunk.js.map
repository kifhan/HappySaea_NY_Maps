{"version":3,"sources":["Components/MapView.tsx","Components/Video.tsx","Components/PlayMapControl.tsx","Utils/WindowSIze.ts","Routes/PlayScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["styles","container","height","width","Anchor","lat","lng","zoom","googleMap","useGoogleMap","useEffect","setTimeout","panTo","setZoom","MapView","mapCenter","markers","anchoring","onMarkerPlayClick","mapApiKey","process","useState","anchor","setAnchor","infomarker","setinfomarker","googlemap","useRef","infoWindow","marker","current","open","style","googleMapsApiKey","onLoad","ref","mapContainerStyle","center","map","title","onClick","position","seekto","close","backgroundColor","opacity","padding","borderRadius","border","display","flexDirection","justifyContent","fontSize","color","fontWeight","marginBottom","src","alt","paddingLeft","paddingTop","right","icon","faPlay","size","cursor","margin","Video","videoCode","videoref","onPlay","onPause","onEnd","onStateChange","onReady","opts","toString","playerVars","listType","showinfo","rel","videoId","containerClassName","e","PlayMapControl","duration","playTime","onMarkerClick","darr","split","total","parseInt","marginTop","value","tarr","seconds","transform","faMapPin","playDot","faStreetView","useWindowSize","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","alignItems","content","PlayScreen","props","screensize","clipWidth","React","setPlayTime","setAnchoring","callback","requestRef","previousTimeRef","framecount","animate","time","deltaTime","Number","requestAnimationFrame","cancelAnimationFrame","useAnimationFrame","player","playerInfo","playerState","ptime","Math","round","getCurrentTime","console","log","i","data","length","target","seekTo","playVideo","nav","titleWrap","textDecoration","alignSelf","marginLeft","menuwrap","menuitem","listStyle","menuicon","paddingRight","App","basename","to","className","faSearch","path","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0454784b.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport {\r\n    GoogleMap, LoadScript, useGoogleMap, Marker, InfoWindow, StandaloneSearchBox, InfoBox,\r\n    // MarkerProps\r\n} from '@react-google-maps/api';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport interface MarkerData {\r\n    position: Array<any>;\r\n    title: string;\r\n    type: string;\r\n    seekto: string;\r\n}\r\n\r\ninterface Props {\r\n    markers: Array<MarkerData>;\r\n    height?: string;\r\n    width?: string;\r\n    mapCenter: { lat: number, lng: number },\r\n    anchoring?: { marker?: MarkerData, lat: number, lng: number, zoom: number };\r\n    onMarkerPlayClick?: (marker: MarkerData) => void;\r\n}\r\n\r\nconst MapView = ({ mapCenter, markers, anchoring, width = \"100%\", height = \"100%\", onMarkerPlayClick }: Props) => {\r\n    const mapApiKey = (process.env.NODE_ENV === \"development\") ? process.env.REACT_APP_GOOGLE_MAP_API_KEY_DEV : process.env.REACT_APP_GOOGLE_MAP_API_KEY\r\n    // console.log(\"map key is \" + mapApiKey)\r\n    const [anchor, setAnchor] = useState({ ...mapCenter, zoom: 11 })\r\n    // const { lat, lng, zoom } = anchoring || {lat:0, lng:0, zoom:0}\r\n    const [infomarker, setinfomarker] = useState<MarkerData>(markers[0])\r\n    const googlemap = useRef<any>({})\r\n    const infoWindow = useRef<any>({})\r\n\r\n    useEffect(() => {\r\n        if (anchoring) setAnchor(anchoring)\r\n        if (anchoring?.marker) {\r\n            setinfomarker(anchoring.marker)\r\n            infoWindow.current.open(googlemap.current)\r\n        }\r\n    }, [anchoring])\r\n\r\n    return (\r\n        <div style={{ ...styles.container, width, height }}>\r\n            {\r\n                mapApiKey ?\r\n                    <LoadScript googleMapsApiKey={mapApiKey}>\r\n                        <GoogleMap\r\n                            onLoad={(ref: any) => { googlemap.current = ref }}\r\n                            mapContainerStyle={styles.container}\r\n                            center={mapCenter}\r\n                            zoom={12}\r\n                        >\r\n                            { /* Child components, such as markers, info windows, etc. */\r\n                                markers.map((marker) => (\r\n                                    <Marker\r\n                                        key={marker.seekto}\r\n                                        title={marker.title}\r\n                                        onClick={() => {\r\n                                            // setAnchor({\r\n                                            //     ...anchor,\r\n                                            //     lat: marker.position[0],\r\n                                            //     lng: marker.position[1],\r\n                                            // })\r\n                                            // infoWindow.current.show()\r\n                                            setinfomarker(marker)\r\n                                            infoWindow.current.open(googlemap.current)\r\n                                        }}\r\n                                        position={{\r\n                                            lat: marker.position[0],\r\n                                            lng: marker.position[1],\r\n                                        }} />\r\n                                ))}\r\n                            <Anchor {...{ ...anchor }} />\r\n                            <InfoBox\r\n                                onLoad={ref => { infoWindow.current = ref; infoWindow.current.close() }}\r\n                                position={{ lat: infomarker.position[0], lng: infomarker.position[1] }}>\r\n                                <div style={{\r\n                                    width: 260, backgroundColor: 'white', opacity: 1, padding: 8, borderRadius: 8, border: \"1px solid #a2a2a2\",\r\n                                    display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"\r\n                                }}>\r\n                                    <div style={{ fontSize: 16, color: `#08233B`, fontWeight: \"bold\", marginBottom: 8 }}>\r\n                                        {infomarker.title}\r\n                                    </div>\r\n                                    <div style={{\r\n                                        fontSize: 16, color: `#08233B`,\r\n                                        display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\"\r\n                                    }}>\r\n                                        <div style={{}}>\r\n                                            <img width=\"32px\" src=\"https://yt3.ggpht.com/ytc/AKedOLRL6Bdx5Md5D2PRXnHCS8e8qekWx8r2UmPLRTUV=s88-c-k-c0x00ffffff-no-rj\" alt=\"happysaea said\" />\r\n                                        </div>\r\n                                        <div style={{ paddingLeft: 12, paddingTop: 6 }}>\r\n                                            <span>...</span>\r\n                                        </div>\r\n                                        <div style={{ position: \"absolute\", right: 14, paddingTop: 8 }}>\r\n                                            <FontAwesomeIcon onClick={() => {if(onMarkerPlayClick) onMarkerPlayClick(infomarker)} } icon={faPlay} size=\"1x\" color=\"#d34836\" style={{ width: \"16px\", height: \"16px\", cursor: \"pointer\" }} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </InfoBox>\r\n                            {/* <StandaloneSearchBox\r\n                                onLoad={ref => {searchBox.current = ref}}\r\n                                onPlacesChanged={()=>{\r\n                                    const outer: any = searchBox.current;\r\n                                    console.log(outer.getPlaces());\r\n                                }}\r\n                            >\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Customized your placeholder\"\r\n                                    style={{\r\n                                        boxSizing: `border-box`,\r\n                                        border: `1px solid transparent`,\r\n                                        width: `240px`,\r\n                                        height: `32px`,\r\n                                        padding: `0 12px`,\r\n                                        borderRadius: `3px`,\r\n                                        boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\r\n                                        fontSize: `14px`,\r\n                                        outline: `none`,\r\n                                        textOverflow: `ellipses`,\r\n                                        position: \"absolute\",\r\n                                        left: \"50%\",\r\n                                        marginLeft: \"-120px\"\r\n                                    }}\r\n                                />\r\n                            </StandaloneSearchBox> */}\r\n                        </GoogleMap>\r\n                    </LoadScript>\r\n                    : <div>somthing went wrong</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    container: { height: '100%', width: '100%' },\r\n};\r\n\r\n\r\ninterface AnchorProps {\r\n    text?: string;\r\n    lat?: number;\r\n    lng?: number;\r\n    zoom?: number;\r\n}\r\nconst Anchor = ({ lat, lng, zoom }: AnchorProps) => {\r\n    const googleMap = useGoogleMap()\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (lat && lng) googleMap.panTo({ lat, lng })\r\n            if (zoom) googleMap.setZoom(zoom)\r\n            // console.log(\"is it working???? \" + text)\r\n        }, 100);\r\n    }, [lat, lng, zoom])\r\n    return (<div></div>)\r\n};\r\n\r\nexport default MapView\r\n","import React, { Ref } from \"react\";\r\nimport YouTube, { YouTubeProps, Options } from \"react-youtube\";\r\n// import Modal from \"react-modal\";\r\n\r\ninterface Props extends YouTubeProps {\r\n  videoCode: string;\r\n  height: number;\r\n  width: number;\r\n  videoref: Ref<YouTube>;\r\n  // onPlay: (event: { target: YouTube }) => void;\r\n  // onPause: (e: any) => void;\r\n  // onEnd: (e: any) => void;\r\n  // onError: (e: any) => void;\r\n  // onStateChange: (e: any) => void;\r\n  // onPlaybackRateChange: (e: any) => void;\r\n  // onPlaybackQualityChange: (e: any) => void;\r\n}\r\n\r\nconst Video = ({ videoCode, width, height, videoref, onPlay, onPause, onEnd, onStateChange, onReady }: Props) => {\r\n  // const [modalIsOpen, setModalIsOpen] = React.useState(false);\r\n  // let videoCode;\r\n  // if (videoUrl) {\r\n  //   videoCode = videoUrl.split(\"v=\")[1].split(\"&\")[0];\r\n  // }\r\n\r\n  // const checkElapsedTime = (e: any) => {\r\n  //   console.log(e.target.playerInfo.playerState);\r\n  //   const duration = e.target.getDuration();\r\n  //   const currentTime = e.target.getCurrentTime();\r\n  //   if (currentTime / duration > 0.95) {\r\n  //     setModalIsOpen(true);\r\n  //   }\r\n  // };\r\n\r\n  const opts: Options = {\r\n    height: height.toString(),\r\n    width: width.toString(),\r\n    // height: '390',\r\n    // width: '640',\r\n    playerVars: {\r\n      // autoplay: 1\r\n      // controls: 0,\r\n      listType: \"user_uploads\",\r\n      showinfo: 0,\r\n      rel: 0,\r\n    },\r\n  };\r\n  // https://developers.google.com/youtube/player_parameters\r\n\r\n  // <YouTube\r\n  //     videoId={string}                  // defaults -> null\r\n  //     id={string}                       // defaults -> null\r\n  //     className={string}                // defaults -> null\r\n  //     containerClassName={string}       // defaults -> ''\r\n  //     opts={obj}                        // defaults -> {}\r\n  //     onReady={func}                    // defaults -> noop\r\n  //     onPlay={func}                     // defaults -> noop\r\n  //     onPause={func}                    // defaults -> noop\r\n  //     onEnd={func}                      // defaults -> noop\r\n  //     onError={func}                    // defaults -> noop\r\n  //     onStateChange={func}              // defaults -> noop\r\n  //     onPlaybackRateChange={func}       // defaults -> noop\r\n  //     onPlaybackQualityChange={func}    // defaults -> noop\r\n  //     />\r\n\r\n  // const handleExerciseComplete = () => console.log(\"Do something\");\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div>\r\n        <div>\r\n          <YouTube\r\n            ref={videoref}\r\n            videoId={videoCode}\r\n            containerClassName=\"embed embed-youtube\"\r\n            opts={opts}\r\n            onReady={(e) => { if (onReady) onReady(e) }}\r\n            onPlay={(e) => { if (onPlay) onPlay(e) }}\r\n            onPause={(e) => { if (onPause) onPause(e) }}\r\n            onEnd={(e) => { if (onEnd) onEnd(e) }}\r\n            onStateChange={(e) => { if (onStateChange) onStateChange(e) }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={() => setModalIsOpen(false)}\r\n        contentLabel=\"Exercise Completed\"\r\n        style={{ content: styles.modal }}\r\n      >\r\n        <div>\r\n          <h3>Completed the exercise?</h3>\r\n          <button onClick={handleExerciseComplete}>Complete exercise</button>\r\n        </div>\r\n      </Modal> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    marginBottom: \"-4px\",\r\n  },\r\n  // modal: {\r\n  //   top: \"50%\",\r\n  //   left: \"50%\",\r\n  //   right: \"auto\",\r\n  //   bottom: \"auto\",\r\n  //   marginRight: \"-50%\",\r\n  //   transform: \"translate(-50%, -50%)\"\r\n  // }\r\n};\r\n\r\nexport default Video;","import React, { ReactElement } from 'react'\r\nimport CSS from 'csstype';\r\nimport { MarkerData } from './MapView';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMapPin, faStreetView } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst css = (style: CSS.Properties) => { return style };\r\n\r\ninterface Props {\r\n    markers: Array<MarkerData>;\r\n    width: number;\r\n    height: number;\r\n    duration: string;\r\n    playTime: number;\r\n    onMarkerClick?: (marker: MarkerData) => void\r\n}\r\n\r\nexport default function PlayMapControl({ markers, width, height, duration, playTime, onMarkerClick }: Props): ReactElement {\r\n    const darr = duration.split(\":\")\r\n    const total = parseInt(darr[0]) * 60 + parseInt(darr[1]);\r\n    const barMarginRight = 30\r\n\r\n    return (\r\n        <div style={{ ...styles.container, height }}>\r\n            <div style={{position:\"absolute\", width: width, height: \"13px\", backgroundColor:\"#1db954\", marginTop: height - 13}}></div>\r\n\r\n            {markers.map((value) => {\r\n                const tarr = value.seekto.split(\":\");\r\n                const seconds = parseInt(tarr[0]) * 60 + parseInt(tarr[1]);\r\n                return (\r\n                    <div key={value.seekto} style={{ ...styles.markers, transform: `translate(${(seconds / total) * (width - barMarginRight) + 9}px, ${height / 2}px)` }}>\r\n                        <div onClick={() => { if (onMarkerClick) onMarkerClick(value) }}\r\n                            style={{\r\n                                // width: \"10px\", height: \"10px\", borderRadius: \"5px\", backgroundColor: \"#f4b400\",\r\n                                color: \"#f4b400\", transform: `translate(5px, -10px)`, cursor: \"pointer\"\r\n                            }}>\r\n                            <FontAwesomeIcon icon={faMapPin} size=\"1x\"  />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n\r\n            <div style={{ ...styles.playDot, transform: `translate(${(playTime / total) * (width - barMarginRight)}px, ${height / 2}px)` }}>\r\n                <div style={{\r\n                    // width: \"10px\", height: \"10px\", \r\n                    // backgroundColor: \"#e53238\",\r\n                    transform: `translate(5px, -9px)`\r\n                }}>\r\n                    <FontAwesomeIcon icon={faStreetView} size=\"2x\" color=\"#d34836\" style={{width:\"24px\",height:\"24px\"}}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    container: css({\r\n        height: '80px', width: '100%',\r\n        backgroundColor: \"#ecfbe9\"\r\n    }),\r\n    markers: css({\r\n        position: \"absolute\",\r\n    }),\r\n    playDot: css({\r\n        position: \"absolute\",\r\n    }),\r\n};","import { useState, useEffect } from 'react'\r\nexport function useWindowSize() {\r\n    // Initialize state with undefined width/height so server and client renders match\r\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n    const [windowSize, setWindowSize] = useState({\r\n      width: 0,\r\n      height: 0,\r\n    });\r\n    useEffect(() => {\r\n      // Handler to call on window resize\r\n      function handleResize() {\r\n        // Set window width/height to state\r\n        setWindowSize({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight,\r\n        });\r\n      }\r\n      // Add event listener\r\n      window.addEventListener(\"resize\", handleResize);\r\n      // Call handler right away so state gets updated with initial window size\r\n      handleResize();\r\n      // Remove event listener on cleanup\r\n      return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount\r\n    return windowSize;\r\n  }","import React from 'react'\r\nimport MapView, { MarkerData } from '../Components/MapView'\r\nimport Video from '../Components/Video'\r\nimport { YouTubeProps } from \"react-youtube\";\r\n\r\nimport data from '../Stores/VideoData.json'\r\n\r\nimport CSS from 'csstype';\r\nimport PlayMapControl from '../Components/PlayMapControl';\r\nimport { useWindowSize } from '../Utils/WindowSIze';\r\nconst css = (style: CSS.Properties) => { return style };\r\n\r\nconst useAnimationFrame = (callback: any) => {\r\n    // Use useRef for mutable variables that we want to persist\r\n    // without triggering a re-render on their change\r\n    const requestRef = React.useRef(0);\r\n    const previousTimeRef = React.useRef(0);\r\n    const framecount = React.useRef(0);\r\n\r\n    const animate = (time: any) => {\r\n        if (previousTimeRef.current) {\r\n            const deltaTime = time - Number(previousTimeRef.current);\r\n            framecount.current = (framecount.current + 1) % 60\r\n            callback(deltaTime, framecount)\r\n        }\r\n        previousTimeRef.current = time;\r\n        requestRef.current = requestAnimationFrame(animate);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        requestRef.current = requestAnimationFrame(animate);\r\n        return () => cancelAnimationFrame(requestRef.current);\r\n    }, []); // Make sure the effect runs only once\r\n}\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst PlayScreen = (props: Props) => {\r\n  const screensize = useWindowSize()\r\n  const clipWidth = (screensize.width > 720) ? 720 : screensize.width\r\n\r\n    const [playTime, setPlayTime] = React.useState(0)\r\n    // const [count, setCount] = React.useState(0)\r\n    const [anchoring, setAnchoring] = React.useState<{ marker?: MarkerData, lat: number, lng: number, zoom: number }>({ lat: 0, lng: 0, zoom: 0 })\r\n    const videoref: { current?: YouTubeProps } | any = React.useRef(null)\r\n\r\n    // for (var i = 0; i < data.markers.length; i++) {\r\n    //     for (var i = 0; i < data.markers.length; i++) {\r\n    //         const tarr = data.markers[i].seekto.split(\":\");\r\n    //         const seconds = parseInt(tarr[0]) * 60 + parseInt(tarr[1]);\r\n    //         data.markers[i].seconds = seconds\r\n    //     }\r\n    // }\r\n\r\n    useAnimationFrame((deltaTime: any, framecount: any) => {\r\n        let player = videoref.current\r\n\r\n        if (framecount.current === 0 && player.playerInfo && player.playerInfo.playerState === 1) {\r\n            // console.log(player.playerInfo.playerState); \r\n            // console.log(player)\r\n            var ptime = Math.round(player.getCurrentTime());\r\n            console.log(\"playtime is \" + ptime)\r\n            for (var i = 0; i < data.markers.length; i++) {\r\n                const tarr = data.markers[i].seekto.split(\":\");\r\n                const seconds = parseInt(tarr[0]) * 60 + parseInt(tarr[1]);\r\n                // console.log(\"give\"+ data.markers[i].title +\" me \" + seconds)\r\n                if (seconds === ptime) {\r\n                    // if (data.markers[i].type === 'visible') break;\r\n                    // data.markers[i].type = 'visible';\r\n                    //data.markers[i].marker.setMap(map);\r\n                    // data.markers[i].marker.setIcon(icons[data.markers[i].type].icon)\r\n\r\n                    // map.panTo(data.markers[i].position);\r\n                    // if (map.getZoom() != 15) map.setZoom(15);\r\n                    console.log(\"this you get it? \" + data.markers[i].title)\r\n                    setAnchoring({ lat: data.markers[i].position[0], lng: data.markers[i].position[1], zoom: 16, marker: data.markers[i] })\r\n                } else {\r\n                    //data.markers[i].marker.setMap(null);\r\n                    // data.markers[i].marker.setIcon(icons[data.markers[i].type].icon)\r\n                    // data.markers[i].type = 'hidden';\r\n                    // map.setZoom(14);\r\n                }\r\n            }\r\n            setPlayTime(ptime)\r\n        }\r\n\r\n    })\r\n\r\n    const onReady = (e: { target: any }) => {\r\n        console.log(\"video [end]: \" + e.target.playerInfo.playerState);\r\n        videoref.current = e.target\r\n    }\r\n    const onPlay = (e: { target: any }) => {\r\n        console.log(\"video [play]: \" + e.target.playerInfo.playerState);\r\n    }\r\n    const onPause = (e: { target: any }) => {\r\n        console.log(\"video [pause]: \" + e.target.playerInfo.playerState);\r\n    }\r\n    const onEnd = (e: { target: any }) => {\r\n        console.log(\"video [end]: \" + e.target.playerInfo.playerState);\r\n    }\r\n    const onStateChange = (e: { target: any }) => {\r\n        console.log(\"video state: \" + e.target.playerInfo.playerState); // -1: load, 0: end, 1: play, 2: pause, 3: ready\r\n        // const duration = e.target.getDuration();\r\n        // const currentTime = e.target.getCurrentTime();\r\n        videoref.current = e.target\r\n    }\r\n\r\n    const onMarkerPlayClick = (marker: MarkerData) => {\r\n        let player = videoref.current\r\n        console.log(\"on marker play button clicke\")\r\n        if (marker && player.playerInfo) {\r\n            // player.seekTo(seconds:Number, allowSeekAhead:Boolean):Void\r\n            const tarr = marker.seekto.split(\":\");\r\n            const seconds = parseInt(tarr[0]) * 60 + parseInt(tarr[1]);\r\n            player.seekTo(seconds, true);\r\n            player.playVideo();\r\n        }\r\n    }\r\n    return (\r\n        <div style={{...styles.container, width: `${clipWidth}px`}}>\r\n            {/* <div>{Math.round(count)}</div> */}\r\n            <Video videoref={videoref} videoCode={data.videoId} width={clipWidth} height={405/720*clipWidth} {...{ onReady, onPlay, onPause, onEnd, onStateChange }} />\r\n            <PlayMapControl width={clipWidth} height={36} markers={data.markers} duration={data.duration} playTime={playTime}\r\n                onMarkerClick={(marker: MarkerData) => {\r\n                    setAnchoring({ lat: marker.position[0], lng: marker.position[1], zoom: 15, marker: marker })\r\n                }} />\r\n            <MapView mapCenter={data.center} height={`calc(100% - ${405/720*clipWidth}px - 36px)`} markers={data.markers} anchoring={anchoring} onMarkerPlayClick={onMarkerPlayClick} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    container: css({\r\n        height: '100%', width: '720px',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"left\"\r\n    }),\r\n    content: css({\r\n\r\n    })\r\n};\r\n\r\n\r\nexport default PlayScreen\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport PlayScreen from './Routes/PlayScreen';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  // faHome, \n  faSearch,\n} from '@fortawesome/free-solid-svg-icons'\n\n\nimport CSS from 'csstype';\nimport { useWindowSize } from './Utils/WindowSIze';\nconst css = (style: CSS.Properties) => { return style };\n\nfunction App() {\n  const screensize = useWindowSize()\n  const clipWidth = (screensize.width > 720) ? \"720px\" : `${screensize.width}px`\n\n  return (\n    <Router\n      basename={(process.env.NODE_ENV === \"development\") ? undefined : \"/HappySaea_NY_Maps\"}>\n      {/* <Router basename={\"/HappySaea_NY_Maps\"}> */}\n      {/* <span>{process.env.NODE_ENV}</span> */}\n      <div style={styles.container}>\n        <nav style={{ ...styles.nav, width: clipWidth }}>\n          <Link to=\"/\" style={styles.titleWrap}>\n            <div className=\"title-font\" style={styles.title}>HappySaea</div>\n          </Link>\n          <ul style={styles.menuwrap}>\n            {/* <li style={styles.menuitem}>\n              <Link to=\"/\">\n                <FontAwesomeIcon icon={faHome} size=\"2x\" style={styles.menuicon} />\n              </Link>\n            </li> */}\n            <li style={styles.menuitem}>\n              <Link to=\"/search\">\n                <FontAwesomeIcon icon={faSearch} size=\"2x\" style={styles.menuicon} />\n              </Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n          renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/search\">\n            {/* <About /> */}\n            <div style={{ height: \"100%\", width: clipWidth, backgroundColor: \"#FFF8E1\" }}><div style={{ margin: \"20px\", textAlign: \"center\" }}>search videos</div></div>\n          </Route>\n          <Route path=\"/playscreen\">\n            <PlayScreen />\n          </Route>\n          <Route path=\"/\">\n            <PlayScreen />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nconst styles = {\n  container: css({\n    height: '100vh', width: '100vw',\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#8D6E63\",\n  }),\n  nav: css({\n    backgroundColor: \"#FBC02D\",\n    width: \"720px\",\n    flexDirection: \"row\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  }),\n  titleWrap: css({\n    textDecoration: \"none\",\n    alignSelf: \"center\",\n    marginLeft: \"20px\",\n\n  }),\n  title: css({\n    fontSize: \"36px\",\n    fontWeight: \"bold\",\n    color: \"#f25022\",\n    textDecoration: \"none\"\n  }),\n  menuwrap: css({\n    display: \"flex\",\n\n  }),\n  menuitem: css({\n    textDecoration: \"none\",\n    listStyle: \"none\"\n  }),\n  menuicon: css({\n    textDecoration: \"none\",\n    // fontSize: \"18px\",\n    width: \"26px\",\n    height: \"26px\",\n    paddingRight: \"8px\",\n    color: \"#f25022\",\n  }),\n\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}