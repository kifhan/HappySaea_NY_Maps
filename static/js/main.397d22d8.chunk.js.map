{"version":3,"sources":["Components/MapView.tsx","Components/Video.tsx","Components/PlayMapControl.tsx","Utils/WindowSIze.ts","Routes/PlayScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["styles","container","height","width","Anchor","lat","lng","zoom","googleMap","useGoogleMap","useEffect","setTimeout","panTo","setZoom","MapView","mapCenter","markers","anchoring","mapApiKey","process","useState","position","anchor","setAnchor","console","log","style","googleMapsApiKey","mapContainerStyle","center","map","marker","title","margin","padding","marginBottom","Video","videoCode","videoref","onPlay","onPause","onEnd","onStateChange","opts","toString","playerVars","ref","videoId","containerClassName","e","PlayMapControl","duration","playTime","onMarkerClick","darr","split","total","parseInt","backgroundColor","marginTop","value","tarr","seekto","seconds","transform","onClick","color","cursor","icon","faMapPin","size","playDot","faStreetView","useWindowSize","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","display","flexDirection","alignItems","content","PlayScreen","props","screensize","clipWidth","React","setPlayTime","setAnchoring","useRef","callback","requestRef","previousTimeRef","framecount","animate","time","current","deltaTime","Number","requestAnimationFrame","cancelAnimationFrame","useAnimationFrame","player","playerInfo","playerState","ptime","Math","round","getCurrentTime","i","data","length","target","justifyContent","nav","titleWrap","textDecoration","alignSelf","marginLeft","fontSize","fontWeight","menuwrap","menuitem","listStyle","menuicon","paddingRight","App","basename","to","className","faSearch","path","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.397d22d8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {\r\n    GoogleMap, LoadScript, useGoogleMap, Marker,\r\n    // MarkerProps\r\n} from '@react-google-maps/api';\r\n\r\nexport interface MarkerData {\r\n    position: Array<any>;\r\n    title: string;\r\n    type: string;\r\n    seekto: string;\r\n}\r\n\r\ninterface Props {\r\n    markers: Array<MarkerData>;\r\n    height?: string;\r\n    width?: string;\r\n    mapCenter: {lat: number, lng: number},\r\n    anchoring?: { lat: number, lng: number, zoom: number };\r\n}\r\n\r\nconst MapView = ({ mapCenter, markers, anchoring, width = \"100%\", height = \"100%\" }: Props) => {\r\n    const mapApiKey = process.env.REACT_APP_GOOGLE_MAP_API_KEY\r\n    // console.log(\"map key is \" + mapApiKey)\r\n    const [anchor, setAnchor] = useState({ lat: markers[0].position[0], lng: markers[0].position[1], zoom: 11 })\r\n    // const { lat, lng, zoom } = anchoring || {lat:0, lng:0, zoom:0}\r\n\r\n\r\n    useEffect(() => {\r\n        if (anchoring) setAnchor(anchoring)\r\n        console.log(\"did you get any of that?\")\r\n    }, [anchoring])\r\n\r\n    return (\r\n        <div style={{ ...styles.container, width, height }}>\r\n            {\r\n                mapApiKey ?\r\n                    <LoadScript googleMapsApiKey={mapApiKey} >\r\n                        <GoogleMap\r\n                            mapContainerStyle={styles.container}\r\n                            center={mapCenter}\r\n                            zoom={11}\r\n                        >\r\n                            { /* Child components, such as markers, info windows, etc. */\r\n                                markers.map((marker) => (\r\n                                    <Marker\r\n                                        title={marker.title}\r\n                                        position={{\r\n                                            lat: marker.position[0],\r\n                                            lng: marker.position[1],\r\n                                        }} />\r\n                                ))}\r\n                            <Anchor {...{ ...anchor }} />\r\n                        </GoogleMap>\r\n                    </LoadScript>\r\n                    : <div>somthing went wrong</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    container: { height: '100%', width: '100%' },\r\n};\r\n\r\n\r\ninterface AnchorProps {\r\n    text?: string;\r\n    lat?: number;\r\n    lng?: number;\r\n    zoom?: number;\r\n}\r\nconst Anchor = ({ lat, lng, zoom }: AnchorProps) => {\r\n    const googleMap = useGoogleMap()\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (lat && lng) googleMap.panTo({ lat, lng })\r\n            if (zoom) googleMap.setZoom(zoom)\r\n            // console.log(\"is it working???? \" + text)\r\n        }, 100);\r\n    }, [lat, lng, zoom])\r\n    return (<div></div>)\r\n};\r\n\r\nexport default MapView\r\n","import React, { Ref } from \"react\";\r\nimport YouTube, { YouTubeProps } from \"react-youtube\";\r\n// import Modal from \"react-modal\";\r\n\r\ninterface Props extends YouTubeProps {\r\n  videoCode: string;\r\n  height: number;\r\n  width: number;\r\n  videoref: Ref<YouTube>;\r\n  // onPlay: (event: { target: YouTube }) => void;\r\n  // onPause: (e: any) => void;\r\n  // onEnd: (e: any) => void;\r\n  // onError: (e: any) => void;\r\n  // onStateChange: (e: any) => void;\r\n  // onPlaybackRateChange: (e: any) => void;\r\n  // onPlaybackQualityChange: (e: any) => void;\r\n}\r\n\r\nconst Video = ({ videoCode, width, height, videoref, onPlay, onPause, onEnd, onStateChange }: Props) => {\r\n  // const [modalIsOpen, setModalIsOpen] = React.useState(false);\r\n  // let videoCode;\r\n  // if (videoUrl) {\r\n  //   videoCode = videoUrl.split(\"v=\")[1].split(\"&\")[0];\r\n  // }\r\n\r\n  // const checkElapsedTime = (e: any) => {\r\n  //   console.log(e.target.playerInfo.playerState);\r\n  //   const duration = e.target.getDuration();\r\n  //   const currentTime = e.target.getCurrentTime();\r\n  //   if (currentTime / duration > 0.95) {\r\n  //     setModalIsOpen(true);\r\n  //   }\r\n  // };\r\n\r\n  const opts = {\r\n    height: height.toString(),\r\n    width: width.toString(),\r\n    // height: '390',\r\n    // width: '640',\r\n    playerVars: {\r\n      // autoplay: 1\r\n    },\r\n  };\r\n  // https://developers.google.com/youtube/player_parameters\r\n\r\n  // <YouTube\r\n  //     videoId={string}                  // defaults -> null\r\n  //     id={string}                       // defaults -> null\r\n  //     className={string}                // defaults -> null\r\n  //     containerClassName={string}       // defaults -> ''\r\n  //     opts={obj}                        // defaults -> {}\r\n  //     onReady={func}                    // defaults -> noop\r\n  //     onPlay={func}                     // defaults -> noop\r\n  //     onPause={func}                    // defaults -> noop\r\n  //     onEnd={func}                      // defaults -> noop\r\n  //     onError={func}                    // defaults -> noop\r\n  //     onStateChange={func}              // defaults -> noop\r\n  //     onPlaybackRateChange={func}       // defaults -> noop\r\n  //     onPlaybackQualityChange={func}    // defaults -> noop\r\n  //     />\r\n\r\n  const handleExerciseComplete = () => console.log(\"Do something\");\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div>\r\n        <div>\r\n          <YouTube\r\n            ref={videoref}\r\n            videoId={videoCode}\r\n            containerClassName=\"embed embed-youtube\"\r\n            opts={opts}\r\n            onPlay={(e) => { if (onPlay) onPlay(e) }}\r\n            onPause={(e) => { if (onPause) onPause(e) }}\r\n            onEnd={(e) => { if (onEnd) onEnd(e) }}\r\n            onStateChange={(e) => { if (onStateChange) onStateChange(e) }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={() => setModalIsOpen(false)}\r\n        contentLabel=\"Exercise Completed\"\r\n        style={{ content: styles.modal }}\r\n      >\r\n        <div>\r\n          <h3>Completed the exercise?</h3>\r\n          <button onClick={handleExerciseComplete}>Complete exercise</button>\r\n        </div>\r\n      </Modal> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    marginBottom: \"-4px\",\r\n  },\r\n  // modal: {\r\n  //   top: \"50%\",\r\n  //   left: \"50%\",\r\n  //   right: \"auto\",\r\n  //   bottom: \"auto\",\r\n  //   marginRight: \"-50%\",\r\n  //   transform: \"translate(-50%, -50%)\"\r\n  // }\r\n};\r\n\r\nexport default Video;","import React, { ReactElement } from 'react'\r\nimport CSS from 'csstype';\r\nimport { MarkerData } from './MapView';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMapPin, faStreetView } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst css = (style: CSS.Properties) => { return style };\r\n\r\ninterface Props {\r\n    markers: Array<MarkerData>;\r\n    width: number;\r\n    height: number;\r\n    duration: string;\r\n    playTime: number;\r\n    onMarkerClick?: (marker: MarkerData) => void\r\n}\r\n\r\nexport default function PlayMapControl({ markers, width, height, duration, playTime, onMarkerClick }: Props): ReactElement {\r\n    const darr = duration.split(\":\")\r\n    const total = parseInt(darr[0]) * 60 + parseInt(darr[1]);\r\n    const barMarginRight = 30\r\n\r\n    return (\r\n        <div style={{ ...styles.container, height }}>\r\n            <div style={{position:\"absolute\", width: width, height: \"13px\", backgroundColor:\"#1db954\", marginTop: height - 13}}></div>\r\n\r\n            {markers.map((value) => {\r\n                const tarr = value.seekto.split(\":\");\r\n                const seconds = parseInt(tarr[0]) * 60 + parseInt(tarr[1]);\r\n                return (\r\n                    <div style={{ ...styles.markers, transform: `translate(${(seconds / total) * (width - barMarginRight) + 9}px, ${height / 2}px)` }}>\r\n                        <div onClick={() => { if (onMarkerClick) onMarkerClick(value) }}\r\n                            style={{\r\n                                // width: \"10px\", height: \"10px\", borderRadius: \"5px\", backgroundColor: \"#f4b400\",\r\n                                color: \"#f4b400\", transform: `translate(5px, -10px)`, cursor: \"pointer\"\r\n                            }}>\r\n                            <FontAwesomeIcon icon={faMapPin} size=\"1x\"  />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n\r\n            <div style={{ ...styles.playDot, transform: `translate(${(playTime / total) * (width - barMarginRight)}px, ${height / 2}px)` }}>\r\n                <div style={{\r\n                    // width: \"10px\", height: \"10px\", \r\n                    // backgroundColor: \"#e53238\",\r\n                    transform: `translate(5px, -9px)`\r\n                }}>\r\n                    <FontAwesomeIcon icon={faStreetView} size=\"2x\" color=\"#d34836\" style={{width:\"24px\",height:\"24px\"}}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    container: css({\r\n        height: '80px', width: '100%',\r\n        backgroundColor: \"#ecfbe9\"\r\n    }),\r\n    markers: css({\r\n        position: \"absolute\",\r\n    }),\r\n    playDot: css({\r\n        position: \"absolute\",\r\n    }),\r\n};","import { useState, useEffect } from 'react'\r\nexport function useWindowSize() {\r\n    // Initialize state with undefined width/height so server and client renders match\r\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n    const [windowSize, setWindowSize] = useState({\r\n      width: 0,\r\n      height: 0,\r\n    });\r\n    useEffect(() => {\r\n      // Handler to call on window resize\r\n      function handleResize() {\r\n        // Set window width/height to state\r\n        setWindowSize({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight,\r\n        });\r\n      }\r\n      // Add event listener\r\n      window.addEventListener(\"resize\", handleResize);\r\n      // Call handler right away so state gets updated with initial window size\r\n      handleResize();\r\n      // Remove event listener on cleanup\r\n      return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount\r\n    return windowSize;\r\n  }","import React from 'react'\r\nimport MapView, { MarkerData } from '../Components/MapView'\r\nimport Video from '../Components/Video'\r\nimport { YouTubeProps } from \"react-youtube\";\r\n\r\nimport data from '../Stores/VideoData.json'\r\n\r\nimport CSS from 'csstype';\r\nimport PlayMapControl from '../Components/PlayMapControl';\r\nimport { useWindowSize } from '../Utils/WindowSIze';\r\nconst css = (style: CSS.Properties) => { return style };\r\n\r\nconst useAnimationFrame = (callback: any) => {\r\n    // Use useRef for mutable variables that we want to persist\r\n    // without triggering a re-render on their change\r\n    const requestRef = React.useRef(0);\r\n    const previousTimeRef = React.useRef(0);\r\n    const framecount = React.useRef(0);\r\n\r\n    const animate = (time: any) => {\r\n        if (previousTimeRef.current) {\r\n            const deltaTime = time - Number(previousTimeRef.current);\r\n            framecount.current = (framecount.current + 1) % 60\r\n            callback(deltaTime, framecount)\r\n        }\r\n        previousTimeRef.current = time;\r\n        requestRef.current = requestAnimationFrame(animate);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        requestRef.current = requestAnimationFrame(animate);\r\n        return () => cancelAnimationFrame(requestRef.current);\r\n    }, []); // Make sure the effect runs only once\r\n}\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst PlayScreen = (props: Props) => {\r\n  const screensize = useWindowSize()\r\n  const clipWidth = (screensize.width > 720) ? 720 : screensize.width\r\n\r\n    const [playTime, setPlayTime] = React.useState(0)\r\n    // const [count, setCount] = React.useState(0)\r\n    const [anchoring, setAnchoring] = React.useState({ lat: 0, lng: 0, zoom: 0 })\r\n    const videoref: { current?: YouTubeProps } | any = React.useRef(null)\r\n\r\n    // for (var i = 0; i < data.markers.length; i++) {\r\n    //     for (var i = 0; i < data.markers.length; i++) {\r\n    //         const tarr = data.markers[i].seekto.split(\":\");\r\n    //         const seconds = parseInt(tarr[0]) * 60 + parseInt(tarr[1]);\r\n    //         data.markers[i].seconds = seconds\r\n    //     }\r\n    // }\r\n\r\n    useAnimationFrame((deltaTime: any, framecount: any) => {\r\n        let player = videoref.current\r\n\r\n        if (framecount.current === 0 && player.playerInfo && player.playerInfo.playerState === 1) {\r\n            // console.log(player.playerInfo.playerState); \r\n            // console.log(player)\r\n            var ptime = Math.round(player.getCurrentTime());\r\n            console.log(\"playtime is \" + ptime)\r\n            for (var i = 0; i < data.markers.length; i++) {\r\n                const tarr = data.markers[i].seekto.split(\":\");\r\n                const seconds = parseInt(tarr[0]) * 60 + parseInt(tarr[1]);\r\n                // console.log(\"give\"+ data.markers[i].title +\" me \" + seconds)\r\n                if (seconds === ptime) {\r\n                    // if (data.markers[i].type === 'visible') break;\r\n                    // data.markers[i].type = 'visible';\r\n                    //data.markers[i].marker.setMap(map);\r\n                    // data.markers[i].marker.setIcon(icons[data.markers[i].type].icon)\r\n\r\n                    // map.panTo(data.markers[i].position);\r\n                    // if (map.getZoom() != 15) map.setZoom(15);\r\n                    console.log(\"this you get it? \" + data.markers[i].title)\r\n                    setAnchoring({ lat: data.markers[i].position[0], lng: data.markers[i].position[1], zoom: 16 })\r\n                } else {\r\n                    //data.markers[i].marker.setMap(null);\r\n                    // data.markers[i].marker.setIcon(icons[data.markers[i].type].icon)\r\n                    // data.markers[i].type = 'hidden';\r\n                    // map.setZoom(14);\r\n                }\r\n            }\r\n            setPlayTime(ptime)\r\n        }\r\n\r\n    })\r\n\r\n    const onPlay = (e: { target: any }) => {\r\n        console.log(\"video [play]: \" + e.target.playerInfo.playerState);\r\n    }\r\n    const onPause = (e: { target: any }) => {\r\n        console.log(\"video [pause]: \" + e.target.playerInfo.playerState);\r\n    }\r\n    const onEnd = (e: { target: any }) => {\r\n        console.log(\"video [end]: \" + e.target.playerInfo.playerState);\r\n    }\r\n    const onStateChange = (e: { target: any }) => {\r\n        console.log(\"video state: \" + e.target.playerInfo.playerState); // -1: load, 0: end, 1: play, 2: pause, 3: ready\r\n        // const duration = e.target.getDuration();\r\n        // const currentTime = e.target.getCurrentTime();\r\n        videoref.current = e.target\r\n    }\r\n    return (\r\n        <div style={{...styles.container, width: `${clipWidth}px`}}>\r\n            {/* <div>{Math.round(count)}</div> */}\r\n            <Video videoref={videoref} videoCode={data.videoId} width={clipWidth} height={405/720*clipWidth} {...{ onPlay, onPause, onEnd, onStateChange }} />\r\n            <PlayMapControl width={clipWidth} height={36} markers={data.markers} duration={data.duration} playTime={playTime}\r\n                onMarkerClick={(marker: MarkerData) => {\r\n                    setAnchoring({ lat: marker.position[0], lng: marker.position[1], zoom: 15 })\r\n                }} />\r\n            <MapView mapCenter={data.center} height={`calc(100% - ${405/720*clipWidth}px - 36px)`} markers={data.markers} anchoring={anchoring} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    container: css({\r\n        height: '100%', width: '720px',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"left\"\r\n    }),\r\n    content: css({\r\n\r\n    })\r\n};\r\n\r\n\r\nexport default PlayScreen\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport PlayScreen from './Routes/PlayScreen';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  // faHome, \n  faSearch,\n} from '@fortawesome/free-solid-svg-icons'\n\n\nimport CSS from 'csstype';\nimport { useWindowSize } from './Utils/WindowSIze';\nconst css = (style: CSS.Properties) => { return style };\n\nfunction App() {\n  const screensize = useWindowSize()\n  const clipWidth = (screensize.width > 720) ? \"720px\" : `${screensize.width}px`\n\n  return (\n    <Router basename={\"/HappySaea_NY_Maps\"}>\n      <div style={styles.container}>\n        <nav style={{...styles.nav, width: clipWidth}}>\n          <Link to=\"/\" style={styles.titleWrap}>\n            <div className=\"title-font\" style={styles.title}>HappySaea</div>\n          </Link>\n          <ul style={styles.menuwrap}>\n            {/* <li style={styles.menuitem}>\n              <Link to=\"/\">\n                <FontAwesomeIcon icon={faHome} size=\"2x\" style={styles.menuicon} />\n              </Link>\n            </li> */}\n            <li style={styles.menuitem}>\n              <Link to=\"/search\">\n                <FontAwesomeIcon icon={faSearch} size=\"2x\" style={styles.menuicon} />\n              </Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n          renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/search\">\n            {/* <About /> */}\n            <div style={{height: \"100%\", width: clipWidth, backgroundColor: \"#FFF8E1\"}}><div style={{margin: \"20px\", textAlign: \"center\"}}>search videos</div></div>\n          </Route>\n          <Route path=\"/playscreen\">\n            <PlayScreen />\n          </Route>\n          <Route path=\"/\">\n            <PlayScreen />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nconst styles = {\n  container: css({\n    height: '100vh', width: '100vw',\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#8D6E63\",\n  }),\n  nav: css({\n    backgroundColor: \"#FBC02D\",\n    width: \"720px\",\n    flexDirection: \"row\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  }),\n  titleWrap: css({\n    textDecoration: \"none\",\n    alignSelf: \"center\",\n    marginLeft: \"20px\",\n\n  }),\n  title: css({\n    fontSize: \"36px\",\n    fontWeight: \"bold\",\n    color: \"#f25022\",\n    textDecoration: \"none\"\n  }),\n  menuwrap: css({\n    display: \"flex\",\n\n  }),\n  menuitem: css({\n    textDecoration: \"none\",\n    listStyle: \"none\"\n  }),\n  menuicon: css({\n    textDecoration: \"none\",\n    // fontSize: \"18px\",\n    width: \"26px\",\n    height: \"26px\",\n    paddingRight: \"8px\",\n    color: \"#f25022\",\n  }),\n\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}